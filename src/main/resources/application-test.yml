server:
  servlet:
    context-path: /share-kafka
  port: 8080
  tomcat:
    accesslog:
      enabled: true
      request-attributes-enabled: true
      directory: /data/log/access
  
spring:
  # 缓存配置用redis
  cache:
    type: redis
  # Redis数据库索引（默认为0）
  redis:
    database: 1
    # Redis服务器地址
    host: 192.168.0.3
    # Redis服务器连接端口
    port: 6379
    # Redis服务器连接密码（默认为空）
    password:
    # 连接超时时间（毫秒）
    timeout: 100
    lettuce:
      pool:
        max-active: 80
              # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-wait: -1
              # 连接池中的最大空闲连接
        max-idle: 8
              # 连接池中的最小空闲连接
        min-idle: 0

  # 指定kafka 代理地址，可以多个
  kafka:
    bootstrap-servers: 192.168.0.3:9092
    admin:
      fail-fast: false
    listener:
      ack-mode: MANUAL
    producer:
      retries: 0
      # 每次批量发送消息的数量
      batch-size: 16384
      buffer-memory: 33554432
      # 指定消息key和消息体的编解码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    # 指定默认消费者group id
    consumer:
      group-id: test-consumer-group
      auto-offset-reset: earliest
      enable-auto-commit: false
      auto-commit-interval: 30000
      max-poll-records: 2
      # 指定消息key和消息体的编解码方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: com.klaus.mikaelson.sharekafka.model      
#  datasource:
#    url: jdbc:mysql://192.168.0.3:3306/test?characterEncoding=utf-8&useSSL=false
#    username: root
#    password: 123456
  # jpaconfiguration
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5InnoDBDialect
    
    
sharding:
  jdbc:
    datasource:
      names: ds-master-0,ds-master-1,ds-master-0-slave-0,ds-master-0-slave-1,ds-master-1-slave-0,ds-master-1-slave-1,ds-default
      ds-master-0:
        type: com.zaxxer.hikari.HikariDataSource    
        driver-class-name: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.0.3:3306/demo_ds_master_0?useSSL=false
        username: root
        password: 123456
        max-active: 3
      ds-master-0-slave-0:
        type: com.zaxxer.hikari.HikariDataSource    
        driver-class-name: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.0.3:3306/demo_ds_master_0_slave_0?useSSL=false
        username: root
        password: 123456
        max-active: 3
      ds-master-0-slave-1:
        type: com.zaxxer.hikari.HikariDataSource    
        driver-class-name: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.0.3:3306/demo_ds_master_0_slave_1?useSSL=false
        username: root
        password: 123456
        max-active: 3
      ds-master-1:
        type: com.zaxxer.hikari.HikariDataSource    
        driver-class-name: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.0.3:3306/demo_ds_master_1?useSSL=false
        username: root
        password: 123456
        max-active: 3
      ds-master-1-slave-0:
        type: com.zaxxer.hikari.HikariDataSource    
        driver-class-name: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.0.3:3306/demo_ds_master_1_slave_0?useSSL=false
        username: root
        password: 123456
        max-active: 3
      ds-master-1-slave-1:
        type: com.zaxxer.hikari.HikariDataSource    
        driver-class-name: com.mysql.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.0.3:3306/demo_ds_master_1_slave_1?useSSL=false
        username: root
        password: 123456
        max-active: 3
      #系统默认独立数据源
      ds-default:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.0.3:3306/test?useSSL=false&useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true
        username: root
        password: 123456
        minimum-idle: 1
        maximum-pool-size: 30
        auto-commit: true
        idle-timeout: 60000
        max-lifetime: 1800000
        connection-timeout: 60000
    config:
      sharding:
        default-data-source-name: ds-default
#        default-key-generator-class-name: io.shardingsphere.core.keygen.DefaultKeyGenerator
        default-database-strategy:
          inline:
            sharding-column: user_id
            algorithm-expression: ds-$->{user_id % 2}
        binding-tables: 
        tables:
          t_emp:
            actual-data-nodes: ds-default.t_emp
            key-generator-column-name: eid
          t_order:
            actual-data-nodes: ds-$->{0..1}.t_order_$->{0..1}
            table-strategy: 
              inline: 
                sharding-column: order_id
                algorithm-expression: t_order_$->{order_id % 2}
            database-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds-$->{user_id % 2}
            key-generator-column-name: order_id
          t_order_item:
            actual-data-nodes: ds-$->{0..1}.t_order_item_$->{0..1}
            table-strategy: 
              inline: 
                sharding-column: order_id
                algorithm-expression: t_order_item_$->{order_id % 2}
            database-strategy:
              inline:
                sharding-column: user_id
                algorithm-expression: ds-$->{user_id % 2}
            key-generator-column-name: order_item_id
        master-slave-rules:
          ds-0:
            master-data-source-name: ds-master-0
            slave-data-source-names: ds-master-0-slave-0, ds-master-0-slave-1
          ds-1:
            master-data-source-name: ds-master-1
            slave-data-source-names: ds-master-1-slave-0, ds-master-1-slave-1
        props:
          sql:
            show: true
      orchestration:
        name: demo_spring_boot_ds_share_kafka
        type: SHARDING
        overwrite: false
        zookeeper:
          namespace: orchestration-spring-boot-share-kafka
          server-lists: 192.168.0.3:2181
    
swagger:
  enabled: true
  title: share-kafka
  description: share-kafka for my test
  version: 1.0.0.snap-shot
  license: Apache License, Version 2.0
  licenseUrl: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfServiceUrl: https://github.com/olderzhou/share-kafka
  contact:
    name: klaus mikaelson
    url: http://blog.klausmikaelson.top
    email: love20141002@126.com
  base-package: com.klaus.mikaelson.sharekafka
  base-path: /**
  exclude-path: /error, /ops/**